{"file":"wallet-transactions-table.entry.esm.js","mappings":"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","names":[],"sources":["src/components/wallet-transactions-table/wallet-transactions-table.css?tag=wallet-transactions-table","src/components/wallet-transactions-table/wallet-transactions-table.tsx"],"sourcesContent":[":host {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  background: #f7f9fb;\r\n  font-family: 'Inter', 'Segoe UI', Arial, sans-serif;\r\n}\r\n\r\n.transactions-container {\r\n  background: #fff;\r\n  border-radius: 18px;\r\n  box-shadow: 0 2px 16px rgba(0,0,0,0.07);\r\n  padding: 2rem 2rem 1.5rem 2rem;\r\n  margin: 1.5rem auto 0 auto;\r\n  width: 100%;\r\n  max-width: 900px;\r\n  min-width: 320px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n}\r\n\r\n.top-bar {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  margin-bottom: 1.5rem;\r\n  background: none;\r\n  border-radius: 0;\r\n  box-shadow: none;\r\n  padding: 0;\r\n}\r\n.top-bar .back-btn {\r\n  background: #f7f9fb;\r\n  color: #2563eb;\r\n  border: 1.5px solid #2563eb;\r\n  font-weight: 600;\r\n  border-radius: 8px;\r\n  padding: 0.45rem 1.1rem;\r\n  font-size: 1rem;\r\n  transition: background 0.2s, color 0.2s;\r\n  box-shadow: 0 1px 4px rgba(0,0,0,0.03);\r\n  margin-right: 1.5rem;\r\n}\r\n.top-bar .back-btn:hover {\r\n  background: #2563eb;\r\n  color: #fff;\r\n}\r\n.top-bar h2 {\r\n  margin: 0;\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  color: #22223b;\r\n}\r\n\r\n.export-btn {\r\n  background: #2563eb;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  font-size: 1.1rem;\r\n  padding: 0.7rem 2rem;\r\n  margin-bottom: 1.2rem;\r\n  margin-top: 0.5rem;\r\n  transition: background 0.2s;\r\n}\r\n.export-btn:hover {\r\n  background: #1d4ed8;\r\n}\r\n\r\n.table-container {\r\n  width: 100%;\r\n  overflow-x: auto;\r\n  margin-top: 1.5rem;\r\n  background: none;\r\n}\r\n.transactions-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  background: #f7f9fb;\r\n  font-size: 1rem;\r\n  min-width: 600px;\r\n}\r\n.transactions-table thead, .transactions-table tbody {\r\n  display: table;\r\n  width: 100%;\r\n  table-layout: fixed;\r\n}\r\n.transactions-table th, .transactions-table td {\r\n  padding: 0.9rem 1.1rem;\r\n  text-align: left;\r\n}\r\n.transactions-table th {\r\n  background: #f1f5f9;\r\n  font-weight: 600;\r\n  color: #22223b;\r\n  font-size: 1.05rem;\r\n}\r\n.transactions-table tr {\r\n  background: #fff;\r\n  border-bottom: 1px solid #e5e7eb;\r\n}\r\n.transactions-table tr:last-child {\r\n  border-bottom: none;\r\n}\r\n.transactions-table tr:nth-child(even) td {\r\n  background: #fff;\r\n}\r\n\r\n.pagination {\r\n  display: flex;\r\n  gap: 1.2rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n.pagination button {\r\n  background: #e5edfa;\r\n  color: #22223b;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  font-size: 1.1rem;\r\n  padding: 0.7rem 1.5rem;\r\n  transition: background 0.2s;\r\n}\r\n.pagination button:disabled {\r\n  background: #f1f5f9;\r\n  color: #b0b7c3;\r\n  cursor: not-allowed;\r\n}\r\n.pagination button:hover:not(:disabled) {\r\n  background: #c7d7f7;\r\n}\r\n\r\n.error {\r\n  color: #e11d48;\r\n  background: #fef2f2;\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n  margin-top: 2rem;\r\n  font-size: 1.05rem;\r\n  border: 1px solid #fecaca;\r\n}\r\n\r\n@media (max-width: 900px) {\r\n  .transactions-table {\r\n    font-size: 0.95rem;\r\n    min-width: 480px;\r\n  }\r\n  .transactions-table th, .transactions-table td {\r\n    padding: 0.7rem 0.7rem;\r\n  }\r\n}\r\n@media (max-width: 700px) {\r\n  .transactions-container {\r\n    max-width: 98vw;\r\n    min-width: 0;\r\n    padding: 1rem 0.3rem 0.7rem 0.3rem;\r\n  }\r\n  .transactions-table {\r\n    font-size: 0.95rem;\r\n    display: block;\r\n    overflow-x: auto;\r\n  }\r\n  .transactions-table th, .transactions-table td {\r\n    padding: 0.4rem 0.3rem;\r\n    font-size: 0.95rem;\r\n    white-space: normal;\r\n    word-break: break-word;\r\n    overflow-wrap: break-word;\r\n  }\r\n}\r\n@media (max-width: 600px) {\r\n  .table-container {\r\n    margin-top: 0.7rem;\r\n  }\r\n  .transactions-table {\r\n    font-size: 0.9rem;\r\n    min-width: 350px;\r\n  }\r\n  .transactions-table th, .transactions-table td {\r\n    padding: 0.5rem 0.4rem;\r\n  }\r\n}\r\n@media (max-width: 500px) {\r\n  .transactions-container {\r\n    padding: 0.7rem 0.1rem 0.7rem 0.1rem;\r\n  }\r\n  .transactions-table th, .transactions-table td {\r\n    font-size: 0.92rem;\r\n    padding: 0.3rem 0.2rem;\r\n  }\r\n}\r\n","import { Component, h, Prop, State, Watch } from '@stencil/core';\r\nimport { API_BASE_URL } from '../../config';\r\n\r\n@Component({\r\n  tag: 'wallet-transactions-table',\r\n  styleUrl: 'wallet-transactions-table.css',\r\n  shadow: false\r\n})\r\nexport class WalletTransactionsTable {\r\n  @Prop() walletId: string;\r\n\r\n  @State() transactions: any[] = [];\r\n  @State() total: number = 0;\r\n  @State() skip: number = 0;\r\n  @State() limit: number = 5;\r\n  @State() loading: boolean = false;\r\n  @State() error: string = '';\r\n  @State() sortBy: string = 'transaction_time_stamp';\r\n  @State() sortDir: 'asc' | 'desc' = 'desc';\r\n\r\n  private cachedData: string = '';\r\n\r\n  componentWillLoad() {\r\n    this.fetchTransactions();\r\n  }\r\n\r\n  private shouldFetchData() {\r\n    const newData = JSON.stringify({\r\n      walletId: this.walletId,\r\n      skip: this.skip,\r\n      limit: this.limit,\r\n      sortBy: this.sortBy,\r\n      sortDir: this.sortDir\r\n    });\r\n    if (newData !== this.cachedData) {\r\n      this.cachedData = newData;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  async fetchTransactions() {\r\n    if (!this.shouldFetchData()) return;\r\n\r\n    try {\r\n      this.loading = true;\r\n\r\n      const res = await fetch(`${API_BASE_URL}/transactions?walletId=${this.walletId}&skip=${this.skip}&limit=${this.limit}&sortBy=${this.sortBy}&sortDir=${this.sortDir}`);\r\n      if (!res.ok) throw new Error('Failed to fetch transactions');\r\n      const data = await res.json();\r\n\r\n      const countRes = await fetch(`${API_BASE_URL}/transactions/count?walletId=${this.walletId}`);\r\n      if (!countRes.ok) throw new Error('Failed to fetch transaction count');\r\n      const countData = await countRes.json();\r\n\r\n      this.transactions = data;\r\n      this.total = countData.total;\r\n      this.error = '';\r\n    } catch (err) {\r\n      this.error = (err as Error).message;\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  @Watch('walletId')\r\n  walletIdChanged() {\r\n    this.fetchTransactions();\r\n  }\r\n\r\n  private handleSort = (field: string) => {\r\n    const newDir = this.sortBy === field ? (this.sortDir === 'asc' ? 'desc' : 'asc') : 'desc';\r\n    this.sortBy = field;\r\n    this.sortDir = newDir;\r\n    this.fetchTransactions();\r\n  };\r\n\r\n  private handlePaginate = (skip: number) => {\r\n    this.skip = skip;\r\n    this.fetchTransactions();\r\n  };\r\n\r\n  private arrow = (field: string) => {\r\n    if (this.sortBy !== field) return <span style={{ opacity: '0.3' }}>↑↓</span>;\r\n    return this.sortDir === 'asc' ? <b>↑</b> : <b>↓</b>;\r\n  };\r\n\r\n  render() {\r\n    const isFirstPage = this.skip === 0;\r\n    const isLastPage = this.skip + this.limit >= this.total;\r\n    return (\r\n      <div class=\"table-container\" style={{ position: 'relative' }}>\r\n        <table class=\"transactions-table\" style={{ position: 'relative' }}>\r\n          <thead>\r\n            <tr>\r\n              <th onClick={() => this.handleSort('transaction_time_stamp')} style={{ cursor: 'pointer' }}>\r\n                Date {this.arrow('transaction_time_stamp')}\r\n              </th>\r\n              <th onClick={() => this.handleSort('amount')} style={{ cursor: 'pointer' }}>\r\n                Amount {this.arrow('amount')}\r\n              </th>\r\n              <th>Description</th>\r\n              <th>Type</th>\r\n              <th>Balance</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.transactions.map(transaction => (\r\n              <tr>\r\n                <td>{transaction.date ? new Date(transaction.date).toLocaleString() : ''}</td>\r\n                <td>{typeof transaction.amount === 'number' ? transaction.amount.toFixed(4) : ''}</td>\r\n                <td>{transaction.description || ''}</td>\r\n                <td>{transaction.type ? (transaction.type.charAt(0).toUpperCase() + transaction.type.slice(1).toLowerCase()) : ''}</td>\r\n                <td>{typeof transaction.balance === 'number' ? transaction.balance.toFixed(4) : ''}</td>\r\n              </tr>\r\n            ))}\r\n            {this.transactions.length === 0 && !this.loading && (\r\n              <tr>\r\n                <td colSpan={5} style={{ textAlign: 'center', padding: '2rem' }}>\r\n                  No transactions found\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        <div class=\"pagination\">\r\n          <button disabled={isFirstPage || this.loading}\r\n            onClick={() => this.handlePaginate(Math.max(0, this.skip - this.limit))}>\r\n            Prev\r\n          </button>\r\n          <button disabled={isLastPage || this.loading}\r\n            onClick={() => this.handlePaginate(this.skip + this.limit)}>\r\n            Next\r\n          </button>\r\n        </div>\r\n        {this.error && <div class=\"error\">{this.error}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}