{"version":3,"names":["notificationToastCss","NotificationToast","message","type","duration","visible","hideTimeout","disconnectedCallback","this","clearTimeout","onMessageChange","Boolean","window","setTimeout","render","h","key","class","toast","show","success","error","API_BASE_URL","walletAppRootCss","WalletAppRoot","page","walletId","theme","notification","config","apiBaseUrl","notificationDuration","notificationTimeout","mediaQuery","componentWillLoad","setupThemeDetection","loadSavedWallet","removeEventListener","handleThemeChange","matchMedia","matches","addEventListener","console","e","savedWalletId","localStorage","getItem","res","fetch","ok","errorText","text","Error","showNotification","removeItem","handleWalletCreated","async","event","detail","setItem","json","handleShowTransactions","handleBack","handleNotificationChange","commonProps","onNotificationChange","onWalletCreated","onShowTransactions","onBack","walletDashboardCss","WalletDashboard","showTransactions","notificationChange","wallet","amount","description","isCredit","loading","loadingWallet","fetchWallet","walletIdChanged","newValue","oldValue","id","_id","balance","name","date","Date","undefined","err","emit","handleTransaction","preventDefault","parseFloat","amt","method","headers","body","JSON","stringify","data","toFixed","onSubmit","step","min","pattern","onInput","value","target","parts","split","length","slice","placeholder","required","checked","onChange","disabled","onClick","walletSetupCss","WalletSetup","walletCreated","handleSubmit","Number","errData","catch","errorMessage","handleBalanceInput","input","walletTransactionsCss","WalletTransactions","back","handleExportCSV","transactionRes","statusText","username","walletRes","walletErr","warn","rows","map","transaction","toLocaleString","transaction_time_stamp","charAt","toUpperCase","toLowerCase","csvContent","join","r","field","String","replace","trim","now","dateStr","getFullYear","getMonth","padStart","getDate","safeUsername","filename","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","walletTransactionsTableCss","WalletTransactionsTable","transactions","total","skip","limit","sortBy","sortDir","cachedData","fetchTransactions","shouldFetchData","newData","countRes","countData","handleSort","newDir","handlePaginate","arrow","style","opacity","isFirstPage","isLastPage","position","cursor","colSpan","textAlign","padding","Math","max"],"sources":["src/components/notification-toast/notification-toast.css?tag=notification-toast&encapsulation=shadow","src/components/notification-toast/notification-toast.tsx","src/config.ts","src/components/wallet-app-root/wallet-app-root.css?tag=wallet-app-root&encapsulation=shadow","src/components/wallet-app-root/wallet-app-root.tsx","src/components/wallet-dashboard/wallet-dashboard.css?tag=wallet-dashboard&encapsulation=shadow","src/components/wallet-dashboard/wallet-dashboard.tsx","src/components/wallet-setup/wallet-setup.css?tag=wallet-setup&encapsulation=shadow","src/components/wallet-setup/wallet-setup.tsx","src/components/wallet-transactions/wallet-transactions.css?tag=wallet-transactions&encapsulation=shadow","src/components/wallet-transactions/wallet-transactions.tsx","src/components/wallet-transactions-table/wallet-transactions-table.css?tag=wallet-transactions-table","src/components/wallet-transactions-table/wallet-transactions-table.tsx"],"sourcesContent":[":host {\r\n  position: fixed;\r\n  left: 50%;\r\n  top: 2.5rem;\r\n  z-index: 9999;\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100vw;\r\n  pointer-events: none;\r\n  transform: translateX(-50%);\r\n}\r\n.toast {\r\n  min-width: 220px;\r\n  max-width: 90vw;\r\n  background: #fff;\r\n  color: #2563eb;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 16px rgba(37,99,235,0.13);\r\n  padding: 1rem 2rem;\r\n  font-size: 1.08rem;\r\n  font-weight: 500;\r\n  opacity: 0;\r\n  transform: translateY(-40px) scale(0.98);\r\n  transition: opacity 0.3s, transform 0.3s;\r\n  pointer-events: auto;\r\n  border: 1.5px solid #2563eb;\r\n  text-align: center;\r\n}\r\n.toast.success {\r\n  background: #e0f2fe;\r\n  color: #2563eb;\r\n  border-color: #2563eb;\r\n}\r\n.toast.error {\r\n  background: #fef2f2;\r\n  color: #e11d48;\r\n  border-color: #e11d48;\r\n}\r\n.toast.show {\r\n  opacity: 1;\r\n  transform: translateY(0) scale(1);\r\n}\r\n@media (max-width: 600px) {\r\n  .toast {\r\n    padding: 0.7rem 1rem;\r\n    font-size: 0.98rem;\r\n  }\r\n}\r\n","import { Component, h, Prop, State, Watch } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'notification-toast',\r\n  styleUrl: 'notification-toast.css',\r\n  shadow: true,\r\n})\r\nexport class NotificationToast {\r\n  @Prop() message: string = '';\r\n  @Prop() type: 'success' | 'error' = 'success';\r\n  @Prop() duration: number = 3000;\r\n  @State() visible: boolean = false;\r\n\r\n  private hideTimeout?: number;\r\n\r\n  disconnectedCallback() {\r\n    if (this.hideTimeout) {\r\n      clearTimeout(this.hideTimeout);\r\n    }\r\n  }\r\n\r\n  @Watch('message')\r\n  onMessageChange() {\r\n    if (this.hideTimeout) {\r\n      clearTimeout(this.hideTimeout);\r\n    }\r\n\r\n    this.visible = Boolean(this.message);\r\n\r\n    if (this.message) {\r\n      this.hideTimeout = window.setTimeout(() => {\r\n        this.visible = false;\r\n      }, this.duration);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        class={{\r\n          'toast': true,\r\n          'show': this.visible && Boolean(this.message),\r\n          'success': this.type === 'success',\r\n          'error': this.type === 'error',\r\n        }}\r\n      >\r\n        {this.message}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const API_BASE_URL = 'https://wallet-app-wlvr.onrender.com/';\r\n// export const API_BASE_URL = 'http://localhost:3001';\r\n",":host {\r\n  display: block;\r\n  min-height: 100vh;\r\n  background: #f7f9fb;\r\n  font-family: 'Inter', 'Segoe UI', Arial, sans-serif;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  max-width: 100vw;\r\n  overflow-x: hidden;\r\n}\r\n\r\nhtml, body {\r\n  overflow-x: hidden !important;\r\n  overflow-y: auto !important;\r\n  width: 100%;\r\n  max-width: 100vw;\r\n  height: 100vh;\r\n  margin: 0;\r\n  padding: 0;\r\n  position: fixed;\r\n  box-sizing: border-box;\r\n}\r\n\r\nheader {\r\n  position: relative;\r\n  left: 0;\r\n  right: 0;\r\n  width: 100vw;\r\n  max-width: 100vw;\r\n  min-width: 0;\r\n  overflow-x: hidden;\r\n  background: #2563eb;\r\n  color: #fff;\r\n  padding: 1.5rem 0;\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.04);\r\n  z-index: 100;\r\n}\r\n\r\nheader h1 {\r\n  font-size: 2.1rem;\r\n  font-weight: 700;\r\n  letter-spacing: 0.01em;\r\n  margin: 0;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  overflow-wrap: break-word;\r\n  white-space: normal;\r\n}\r\n\r\nmain {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 80%;\r\n  width: 100vw;\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0 1rem;\r\n}\r\n\r\n@media (max-width: 900px) {\r\n  header h1 {\r\n    font-size: 1.5rem;\r\n  }\r\n  main {\r\n    padding: 0 0.5rem;\r\n  }\r\n}\r\n@media (max-width: 600px) {\r\n  header {\r\n    padding: 1rem 0.2rem;\r\n    font-size: 1.3rem;\r\n  }\r\n  header h1 {\r\n    font-size: 1.1rem;\r\n  }\r\n  main {\r\n    padding: 0 0.2rem;\r\n  }\r\n}\r\n\r\n:host, .theme-light {\r\n  --bg: #f7f9fb;\r\n  --text: #111827;\r\n  --header-bg: #2563eb;\r\n  --header-text: #fff;\r\n  --card-bg: #fff;\r\n  --card-shadow: 0 2px 16px rgba(37,99,235,0.08);\r\n  --input-bg: #fff;\r\n  --input-border: #cbd5e1;\r\n  --input-focus: #2563eb;\r\n  --primary: #2563eb;\r\n  --primary-hover: #1d4ed8;\r\n  --danger: #e11d48;\r\n  --card-radius: 18px;\r\n}\r\n.theme-dark {\r\n  --bg: #181a1b;\r\n  --text: #f3f4f6;\r\n  --header-bg: #2563eb;\r\n  --header-text: #e0e7ef;\r\n  --card-bg: #23272f;\r\n  --card-shadow: 0 2px 16px rgba(0,0,0,0.25);\r\n  --input-bg: #23272f;\r\n  --input-border: #374151;\r\n  --input-focus: #2563eb;\r\n  --primary: #2563eb;\r\n  --primary-hover: #1d4ed8;\r\n  --danger: #e11d48;\r\n  --card-radius: 18px;\r\n}\r\n:host, body, html {\r\n  background: var(--bg) !important;\r\n  color: var(--text);\r\n}\r\nheader {\r\n  background: var(--header-bg);\r\n  color: var(--header-text);\r\n}\r\n.wallet-card, .card, .transactions-container {\r\n  background: var(--card-bg);\r\n  box-shadow: var(--card-shadow);\r\n  color: var(--text);\r\n}\r\ninput[type=\"number\"], input[type=\"text\"] {\r\n  background: var(--input-bg);\r\n  border: 1.5px solid var(--input-border);\r\n  color: var(--text);\r\n}\r\ninput[type=\"number\"]:focus, input[type=\"text\"]:focus {\r\n  border-color: var(--input-focus);\r\n  box-shadow: 0 0 0 3px rgba(37,99,235,0.12);\r\n}\r\n.submit-btn {\r\n  background: var(--primary);\r\n  color: #fff;\r\n}\r\n.submit-btn:hover {\r\n  background: var(--primary-hover);\r\n}\r\n.view-transactions-btn {\r\n  border: 1.5px solid var(--primary);\r\n  color: var(--primary);\r\n}\r\n.view-transactions-btn:hover {\r\n  background: #eff6ff;\r\n}\r\n.error {\r\n  color: var(--danger);\r\n}\r\n","import { Component, Element, h, State, Listen } from '@stencil/core';\r\nimport { API_BASE_URL } from '../../config';\r\n\r\ninterface Config {\r\n  apiBaseUrl: string;\r\n  notificationDuration: number;\r\n}\r\n\r\n@Component({\r\n  tag: 'wallet-app-root',\r\n  styleUrl: 'wallet-app-root.css',\r\n  shadow: true,\r\n})\r\nexport class WalletAppRoot {\r\n  @Element() el!: HTMLElement;\r\n\r\n  @State() page: string = 'setup';\r\n  @State() walletId: string = '';\r\n  @State() theme: 'light' | 'dark' = 'light';\r\n  @State() notification: { message: string; type: 'success' | 'error' } = { message: '', type: 'success' };\r\n\r\n  private readonly config: Config = {\r\n    apiBaseUrl: API_BASE_URL,\r\n    notificationDuration: 3000,\r\n  };\r\n\r\n  private notificationTimeout?: number;\r\n  private mediaQuery?: MediaQueryList;\r\n\r\n  componentWillLoad() {\r\n    this.setupThemeDetection();\r\n    return this.loadSavedWallet();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    if (this.notificationTimeout) {\r\n      window.clearTimeout(this.notificationTimeout);\r\n    }\r\n    if (this.mediaQuery?.removeEventListener) {\r\n      this.mediaQuery.removeEventListener('change', this.handleThemeChange);\r\n    }\r\n  }\r\n\r\n  private setupThemeDetection() {\r\n    try {\r\n      this.mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n      this.theme = this.mediaQuery.matches ? 'dark' : 'light';\r\n      \r\n      if (this.mediaQuery.addEventListener) {\r\n        this.mediaQuery.addEventListener('change', this.handleThemeChange);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to setup theme detection:', error);\r\n      this.theme = 'light';\r\n    }\r\n  }\r\n  @Listen('change', { target: 'window' })\r\n  handleThemeChange(e: MediaQueryListEvent) {\r\n    this.theme = e.matches ? 'dark' : 'light';\r\n  }\r\n\r\n  private async loadSavedWallet() {\r\n    const savedWalletId = localStorage.getItem('walletId');\r\n    if (!savedWalletId) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(`${this.config.apiBaseUrl}/wallet/${savedWalletId}`);\r\n      if (!res.ok) {\r\n        const errorText = await res.text();\r\n        throw new Error(errorText || 'Failed to load wallet');\r\n      }\r\n      this.walletId = savedWalletId;\r\n      this.page = 'dashboard';\r\n    } catch (error: any) {\r\n      console.error('Failed to load wallet:', error);\r\n      this.showNotification(\r\n        error.message === 'Failed to fetch'\r\n          ? 'Unable to connect to backend.'\r\n          : 'Wallet does not exist in the system. Please create a new wallet.',\r\n        'error'\r\n      );\r\n      localStorage.removeItem('walletId');\r\n      this.walletId = '';\r\n      this.page = 'setup';\r\n    }\r\n  }\r\n  \r\n  private showNotification = (message: string, type: 'success' | 'error' = 'success') => {\r\n    if (this.notificationTimeout) {\r\n      window.clearTimeout(this.notificationTimeout);\r\n    }\r\n    \r\n    this.notification = { message, type };\r\n    this.notificationTimeout = window.setTimeout(() => {\r\n      this.notification = { message: '', type: 'success' };\r\n    }, this.config.notificationDuration);\r\n  };\r\n\r\n  private handleWalletCreated = async (event: CustomEvent<{ walletId: string }>) => {\r\n    if (event.detail.walletId) {\r\n      this.walletId = event.detail.walletId;\r\n      localStorage.setItem('walletId', event.detail.walletId);\r\n\r\n      try {\r\n        const res = await fetch(`${this.config.apiBaseUrl}/wallet/${event.detail.walletId}`);\r\n        if (!res.ok) {\r\n          throw new Error('Failed to verify wallet');\r\n        }\r\n        await res.json();\r\n        this.page = 'dashboard';\r\n      } catch (error) {\r\n        console.error('Error verifying wallet:', error);\r\n        this.showNotification('Error loading wallet details', 'error');\r\n        localStorage.removeItem('walletId');\r\n        this.walletId = '';\r\n        this.page = 'setup';\r\n      }\r\n    }\r\n  };\r\n\r\n  private handleShowTransactions = () => {\r\n    if (this.walletId) {\r\n      this.page = 'transactions';\r\n    }\r\n  };\r\n\r\n  private handleBack = () => {\r\n    this.page = 'dashboard';\r\n  };\r\n\r\n  private handleNotificationChange = (event: CustomEvent<{ message: string; type: 'success' | 'error' }>) => {\r\n    if (event.detail.message) {\r\n      this.showNotification(event.detail.message, event.detail.type);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const commonProps = {\r\n      'api-base-url': this.config.apiBaseUrl,\r\n      onNotificationChange: this.handleNotificationChange,\r\n    };\r\n\r\n    return (\r\n      <div class={`theme-${this.theme}`}>\r\n        <header>\r\n          <h1>Wallet App</h1>\r\n        </header>\r\n        <main>\r\n          {this.page === 'setup' && (\r\n            <wallet-setup \r\n              {...commonProps}\r\n              onWalletCreated={this.handleWalletCreated}\r\n            />\r\n          )}\r\n          {this.page === 'dashboard' && this.walletId && (\r\n            <wallet-dashboard \r\n              {...commonProps}\r\n              wallet-id={this.walletId} \r\n              onShowTransactions={this.handleShowTransactions}\r\n            />\r\n          )}\r\n          {this.page === 'transactions' && this.walletId && (\r\n            <wallet-transactions \r\n              {...commonProps}\r\n              wallet-id={this.walletId} \r\n              onBack={this.handleBack}\r\n            />\r\n          )}\r\n        </main>\r\n        <notification-toast \r\n          message={this.notification.message} \r\n          type={this.notification.type} \r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* Minimalist and modern wallet dashboard UI - Reduced max width for no horizontal scroll */\r\n:host {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  background: #f7f9fb;\r\n  font-family: 'Inter', 'Segoe UI', Arial, sans-serif;\r\n}\r\n\r\n.wallet-card {\r\n  background: #fff;\r\n  border-radius: 18px;\r\n  box-shadow: 0 2px 16px rgba(37,99,235,0.08);\r\n  padding: 2.5rem 2rem;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  min-width: 0;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n@media (max-width: 900px) {\r\n  .wallet-card {\r\n    max-width: 90vw;\r\n    padding: 2rem 1rem;\r\n  }\r\n}\r\n@media (max-width: 600px) {\r\n  .wallet-card {\r\n    padding: 1.2rem 0.5rem;\r\n    max-width: 100vw;\r\n    min-width: 0;\r\n    border-radius: 12px;\r\n  }\r\n  h2 {\r\n    font-size: 1.3rem;\r\n  }\r\n  .balance-box {\r\n    padding: 0.8rem 0.5rem;\r\n    font-size: 1rem;\r\n  }\r\n  form {\r\n    gap: 0.7rem;\r\n  }\r\n  input[type=\"number\"],\r\n  input[type=\"text\"],\r\n  .submit-btn,\r\n  .view-transactions-btn {\r\n    font-size: 0.95rem;\r\n    padding: 0.7rem 0.7rem;\r\n  }\r\n}\r\n@media (max-width: 400px) {\r\n  .wallet-card {\r\n    padding: 0.7rem 0.2rem 0.7rem 0.2rem;\r\n  }\r\n  .balance-box {\r\n    padding: 0.5rem 0.2rem;\r\n    font-size: 0.95rem;\r\n  }\r\n}\r\n\r\n.card {\r\n  background: #fff;\r\n  border-radius: 1.25rem;\r\n  box-shadow: 0 2px 16px 0 rgba(37,99,235,0.08);\r\n  padding: 2rem 1.5rem;\r\n  margin: 0 auto;\r\n  max-width: 400px;\r\n  width: 100%;\r\n  min-width: 360px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n@media (max-width: 500px) {\r\n  .card {\r\n    padding: 1.5rem 0.5rem;\r\n    max-width: 100vw;\r\n    min-width: 0;\r\n  }\r\n}\r\n\r\nh2 {\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  margin: 0 0 1.5rem 0;\r\n  color: #000000;\r\n  text-align: center;\r\n}\r\n\r\nh2 span {\r\n  color: #2563eb;\r\n}\r\n\r\n.balance-box {\r\n  background: #f0f9ff;\r\n  color: #0369a1;\r\n  padding: 1rem 2rem;\r\n  border-radius: 12px;\r\n  font-size: 1.1rem;\r\n  font-weight: 500;\r\n  margin-bottom: 2rem;\r\n  width: 100%;\r\n  text-align: center;\r\n  box-sizing: border-box;\r\n}\r\n\r\nform {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.1rem;\r\n  margin-bottom: 1.2rem;\r\n}\r\ninput[type=\"number\"],\r\ninput[type=\"text\"],\r\n.submit-btn,\r\n.view-transactions-btn {\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\ninput[type=\"number\"],\r\ninput[type=\"text\"] {\r\n  padding: 0.8rem 1rem;\r\n  border: 1.5px solid #cbd5e1;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  background: #fff;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\ninput[type=\"number\"]:focus,\r\ninput[type=\"text\"]:focus {\r\n  outline: none;\r\n  border-color: #2563eb;\r\n  box-shadow: 0 0 0 3px rgba(37,99,235,0.12);\r\n}\r\n\r\n.toggle-row {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  margin: 0.5rem 0;\r\n}\r\n\r\n.toggle-info {\r\n  color: #64748b;\r\n  font-size: 0.95rem;\r\n}\r\n\r\n.toggle-switch {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 26px;\r\n}\r\n\r\n.toggle-switch input {\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\n.toggle-slider {\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: #e11d48;\r\n  transition: .3s;\r\n  border-radius: 26px;\r\n}\r\n\r\n.toggle-slider:before {\r\n  position: absolute;\r\n  content: \"\";\r\n  height: 18px;\r\n  width: 18px;\r\n  left: 4px;\r\n  bottom: 4px;\r\n  background-color: white;\r\n  transition: .3s;\r\n  border-radius: 50%;\r\n}\r\n\r\ninput:checked + .toggle-slider {\r\n  background-color: #2563eb;\r\n}\r\n\r\ninput:checked + .toggle-slider:before {\r\n  transform: translateX(24px);\r\n}\r\n\r\n.toggle-label {\r\n  font-size: 0.9rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.toggle-label.credit {\r\n  color: #2563eb;\r\n}\r\n\r\n.toggle-label.debit {\r\n  color: #e11d48;\r\n}\r\n\r\n.submit-btn {\r\n  background: #2563eb;\r\n  color: white;\r\n  border: none;\r\n  padding: 0.8rem;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n.submit-btn:hover {\r\n  background: #1d4ed8;\r\n}\r\n\r\n.submit-btn:disabled {\r\n  background: #94a3b8;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.view-transactions-btn {\r\n  background: none;\r\n  border: 1.5px solid #2563eb;\r\n  color: #2563eb;\r\n  padding: 0.8rem;\r\n  border-radius: 8px;\r\n  font-size: 0.95rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  margin-top: 1rem;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.view-transactions-btn:hover {\r\n  background: #eff6ff;\r\n}\r\n\r\n.error {\r\n  color: #e11d48;\r\n  font-size: 0.9rem;\r\n  margin-top: 1rem;\r\n  text-align: center;\r\n}\r\n\r\n.wallet-card.loading {\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 1.5rem;\r\n  min-height: 200px;\r\n}\r\n\r\n.wallet-card.error {\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 200px;\r\n  color: #ef4444;\r\n  text-align: center;\r\n}\r\n\r\n.loading-spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 3px solid #f3f3f3;\r\n  border-top: 3px solid #2563eb;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n","import { Component, Event, EventEmitter, h, Prop, State, Watch } from '@stencil/core';\r\nimport { API_BASE_URL } from '../../config';\r\n\r\n@Component({\r\n  tag: 'wallet-dashboard',\r\n  styleUrl: 'wallet-dashboard.css',\r\n  shadow: true,\r\n})\r\nexport class WalletDashboard {\r\n  @Prop() walletId: string;\r\n  @Event() showTransactions: EventEmitter<void>;\r\n  @Event() notificationChange: EventEmitter<{ message: string; type: 'success' | 'error' }>;\r\n\r\n  @State() wallet: any = null;\r\n  @State() amount: string = '';\r\n  @State() description: string = '';\r\n  @State() isCredit: boolean = true;\r\n  @State() loading: boolean = false;\r\n  @State() loadingWallet: boolean = false;\r\n\r\n  async componentWillLoad() {\r\n    if (this.walletId) {\r\n      return this.fetchWallet();\r\n    }\r\n  }\r\n\r\n  @Watch('walletId')\r\n  async walletIdChanged(newValue: string, oldValue: string) {\r\n    if (newValue && newValue !== oldValue) {\r\n      await this.fetchWallet();\r\n    }\r\n  }\r\n\r\n  async fetchWallet() {\r\n    if (!this.walletId) return;\r\n    \r\n    this.loadingWallet = true;\r\n    try {\r\n      const res = await fetch(`${API_BASE_URL}/wallet/${this.walletId}`);\r\n      if (!res.ok) {\r\n        throw new Error(await res.text() || 'Network error');\r\n      }\r\n      const wallet = await res.json();\r\n      this.wallet = {\r\n        id: wallet.id || wallet._id, // Support both id and _id\r\n        balance: wallet.balance,\r\n        name: wallet.name,\r\n        date: wallet.date ? new Date(wallet.date) : undefined,\r\n      };\r\n    } catch (err) {\r\n      console.error('Wallet fetch error:', err);\r\n      this.notificationChange.emit({ \r\n        message: err instanceof Error ? err.message : 'Error loading wallet', \r\n        type: 'error' \r\n      });\r\n      this.wallet = null;\r\n    } finally {\r\n      this.loadingWallet = false;\r\n    }\r\n  }\r\n\r\n  async handleTransaction(e: Event) {\r\n    e.preventDefault();\r\n    if (!this.amount) {\r\n      this.notificationChange.emit({ message: 'Amount is required', type: 'error' });\r\n      return;\r\n    }\r\n    // Require amount > 0\r\n    if (parseFloat(this.amount) <= 0) {\r\n      this.notificationChange.emit({ message: 'Amount must be greater than 0', type: 'error' });\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    try {\r\n      const amt = parseFloat(this.amount) * (this.isCredit ? 1 : -1);\r\n      const res = await fetch(`${API_BASE_URL}/transact/${this.walletId}`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ amount: amt, description: this.description }),\r\n      });\r\n      \r\n      const data = await res.json();\r\n      if (!res.ok) {\r\n        this.notificationChange.emit({ message: data.error || 'Transaction failed', type: 'error' });\r\n        return;\r\n      }\r\n      // Update wallet balance from response\r\n      if (this.wallet) {\r\n        this.wallet.balance = data.balance;\r\n      }\r\n      this.amount = '';\r\n      this.description = '';\r\n      this.notificationChange.emit({ message: 'Transaction successful!', type: 'success' });\r\n    } catch (err) {\r\n      this.notificationChange.emit({ message: 'Error processing transaction', type: 'error' });\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.loadingWallet) {\r\n      return (\r\n        <div class=\"wallet-card loading\">\r\n          <div class=\"loading-spinner\"></div>\r\n          <p>Loading wallet details...</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (!this.wallet) {\r\n      return (\r\n        <div class=\"wallet-card error\">\r\n          <p>Could not load wallet details. Please try again.</p>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    return (\r\n      <div class=\"wallet-card\">\r\n        <h2>Welcome, <span>{this.wallet.name}</span></h2>\r\n        <div class=\"balance-box\">Balance: {this.wallet.balance.toFixed(4)}</div>\r\n        <form onSubmit={e => this.handleTransaction(e)}>\r\n          <input \r\n            type=\"number\" \r\n            step=\"0.0001\" \r\n            min=\"0.0001\"\r\n            pattern=\"^\\\\d*\\\\.?\\\\d{0,4}$\"\r\n            onInput={e => {\r\n              const value = (e.target as HTMLInputElement).value;\r\n              const parts = value.split('.');\r\n              if (parts[1] && parts[1].length > 4) {\r\n                (e.target as HTMLInputElement).value = `${parts[0]}.${parts[1].slice(0, 4)}`;\r\n              }\r\n              this.amount = (e.target as HTMLInputElement).value;\r\n            }}\r\n            value={this.amount} \r\n            placeholder=\"Amount\" \r\n            required \r\n          />\r\n          <input \r\n            type=\"text\" \r\n            value={this.description} \r\n            onInput={e => this.description = (e.target as HTMLInputElement).value} \r\n            placeholder=\"Description\" \r\n          />\r\n          <div class=\"toggle-row\">\r\n            <span class=\"toggle-info\">Select transaction type</span>\r\n            <label class=\"toggle-switch\">\r\n              <input type=\"checkbox\" checked={this.isCredit} onChange={() => this.isCredit = !this.isCredit} />\r\n              <span class=\"toggle-slider\"></span>\r\n            </label>\r\n            <span class={\"toggle-label \" + (this.isCredit ? \"credit\" : \"debit\")}>\r\n              {this.isCredit ? 'Credit' : 'Debit'}\r\n            </span>\r\n          </div>\r\n          <button class=\"submit-btn\" type=\"submit\" disabled={this.loading}>\r\n            {this.loading ? 'Processing...' : 'Submit'}\r\n          </button>\r\n        </form>\r\n        <button \r\n          class=\"view-transactions-btn\" \r\n          onClick={() => this.showTransactions.emit()}>\r\n          View Transactions\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",".card {\r\n  background: #fff;\r\n  border-radius: 1.25rem;\r\n  box-shadow: 0 2px 16px 0 rgba(37,99,235,0.08);\r\n  padding: 2rem 1.5rem;\r\n  margin: 0 auto;\r\n  max-width: 400px;\r\n  width: 100%;\r\n  min-width: 360px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n@media (max-width: 500px) {\r\n  .card {\r\n    padding: 1.5rem 0.5rem;\r\n    max-width: 100vw;\r\n    min-width: 0;\r\n  }\r\n}\r\n\r\nh2 {\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  margin-bottom: 1.2rem;\r\n  margin-top: 0;\r\n  letter-spacing: 0.01em;\r\n  color: #2563eb;\r\n  text-align: center;\r\n}\r\nform {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.1rem;\r\n  margin-bottom: 1.2rem;\r\n}\r\ninput[type=\"number\"],\r\ninput[type=\"text\"] {\r\n  padding: 0.6rem 0.8rem;\r\n  border: 1.5px solid #cbd5e1;\r\n  border-radius: 7px;\r\n  font-size: 1rem;\r\n  background: #f8fafc;\r\n  color: #22223b;\r\n  margin-bottom: 0.2rem;\r\n}\r\ninput[type=\"number\"]::-webkit-inner-spin-button,\r\ninput[type=\"number\"]::-webkit-outer-spin-button {\r\n  -webkit-appearance: none;\r\n  margin: 0;\r\n}\r\n.submit-btn {\r\n  width: 100%;\r\n  padding: 0.7rem 0;\r\n  background: #2563eb;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 7px;\r\n  font-weight: 600;\r\n  font-size: 1.1rem;\r\n  margin-top: 0.5rem;\r\n  margin-bottom: 0.7rem;\r\n  transition: background 0.2s;\r\n}\r\n.submit-btn:disabled {\r\n  background: #cbd5e1;\r\n  color: #64748b;\r\n  cursor: not-allowed;\r\n}\r\n.submit-btn:hover:not(:disabled) {\r\n  background: #1d4ed8;\r\n}\r\n.error {\r\n  color: #e11d48;\r\n  background: #fef2f2;\r\n  border-radius: 8px;\r\n  padding: 0.7rem 1rem;\r\n  margin-top: 1rem;\r\n  font-size: 1.05rem;\r\n  border: 1px solid #fecaca;\r\n}\r\n","import { Component, Event, EventEmitter, h, State } from '@stencil/core';\r\nimport { API_BASE_URL } from '../../config';\r\n\r\n@Component({\r\n  tag: 'wallet-setup',\r\n  styleUrl: 'wallet-setup.css',\r\n  shadow: true,\r\n})\r\nexport class WalletSetup {\r\n  @Event() walletCreated: EventEmitter<{ walletId: string }>;\r\n  @Event() notificationChange: EventEmitter<{ message: string; type: 'success' | 'error' }>;\r\n  @State() name: string = '';\r\n  @State() balance: string = '';\r\n  @State() loading: boolean = false;\r\n  @State() error: string = '';\r\n\r\n  async handleSubmit(e: Event) {\r\n    e.preventDefault();\r\n    this.error = '';\r\n    if (!this.name || !this.balance) {\r\n      this.notificationChange.emit({ message: 'Name and balance are required', type: 'error' });\r\n      return;\r\n    }\r\n    // Require balance > 0\r\n    if (Number(this.balance) < 0) {\r\n      this.notificationChange.emit({ message: 'Initial balance must be greater than 0', type: 'error' });\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    try {\r\n      const res = await fetch(`${API_BASE_URL}/setup`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ name: this.name, balance: Number(this.balance) }),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const errData = await res.json().catch(() => ({}));\r\n        throw new Error(errData.error || 'Failed to create wallet');\r\n      }\r\n\r\n      const data = await res.json();\r\n      \r\n      // First notify about successful creation\r\n      this.notificationChange.emit({ \r\n        message: 'Wallet created successfully!', \r\n        type: 'success' \r\n      });\r\n\r\n      // Clear form\r\n      this.name = '';\r\n      this.balance = '';\r\n      \r\n      // Then emit wallet created event to trigger navigation\r\n      this.walletCreated.emit({ walletId: data.id });\r\n\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Failed to create wallet';\r\n      this.notificationChange.emit({ \r\n        message: errorMessage,\r\n        type: 'error' \r\n      });\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  private handleBalanceInput = (e: Event) => {\r\n    const input = e.target as HTMLInputElement;\r\n    const value = input.value;\r\n    const parts = value.split('.');\r\n    if (parts[1] && parts[1].length > 4) {\r\n      input.value = `${parts[0]}.${parts[1].slice(0, 4)}`;\r\n    }\r\n    this.balance = input.value;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"card\">\r\n        <h2>Setup Wallet</h2>\r\n        <form onSubmit={e => this.handleSubmit(e)}>\r\n          <input type=\"text\" value={this.name} onInput={e => this.name = (e.target as HTMLInputElement).value} placeholder=\"Name\" required />\r\n          <input\r\n            type=\"number\"\r\n            step=\"0.0001\"\r\n            min=\"0.0001\"\r\n            pattern=\"^\\\\d*\\\\.?\\\\d{0,4}$\"\r\n            onInput={this.handleBalanceInput}\r\n            value={this.balance}\r\n            placeholder=\"Initial Balance\"\r\n            required\r\n          />\r\n          <button class=\"submit-btn\" type=\"submit\" disabled={this.loading}>{this.loading ? 'Creating...' : 'Create Wallet'}</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  background: #f7f9fb;\r\n  font-family: 'Inter', 'Segoe UI', Arial, sans-serif;\r\n}\r\n\r\n.transactions-container {\r\n  background: #fff;\r\n  border-radius: 18px;\r\n  box-shadow: 0 2px 16px rgba(0,0,0,0.07);\r\n  padding: 2rem 2rem 1.5rem 2rem;\r\n  margin: 1.5rem auto 0 auto;\r\n  width: 100%;\r\n  max-width: 900px;\r\n  min-width: 0;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n}\r\n\r\n.top-bar {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  margin-bottom: 1.5rem;\r\n  background: none;\r\n  border-radius: 0;\r\n  box-shadow: none;\r\n  padding: 0;\r\n}\r\n.left-section {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 2rem;\r\n}\r\n.top-bar .back-btn {\r\n  background: #f7f9fb;\r\n  color: #2563eb;\r\n  border: 1.5px solid #2563eb;\r\n  font-weight: 600;\r\n  border-radius: 8px;\r\n  padding: 0.45rem 1.1rem;\r\n  font-size: 1rem;\r\n  transition: background 0.2s, color 0.2s;\r\n  box-shadow: 0 1px 4px rgba(0,0,0,0.03);\r\n  margin-right: 0;\r\n}\r\n.top-bar .back-btn:hover {\r\n  background: #2563eb;\r\n  color: #fff;\r\n}\r\n.top-bar h2 {\r\n  margin: 0;\r\n  font-size: 2.2rem;\r\n  font-weight: 700;\r\n  color: #111827;\r\n  flex: 1;\r\n  text-align: center;\r\n}\r\n\r\n.export-btn {\r\n  background: #2563eb;\r\n  color: white;\r\n  border: none;\r\n  font-weight: 600;\r\n  border-radius: 8px;\r\n  padding: 0.45rem 1.1rem;\r\n  font-size: 1rem;\r\n  transition: background 0.2s;\r\n  box-shadow: 0 1px 4px rgba(0,0,0,0.03);\r\n  cursor: pointer;\r\n  margin-left: 0;\r\n}\r\n.export-btn:hover {\r\n  background: #1d4ed8;\r\n}\r\n\r\n.transactions-table {\r\n  width: 100%;\r\n  border-collapse: separate;\r\n  border-spacing: 0;\r\n  background: #f8fafc;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.04);\r\n  overflow-x: auto;\r\n  margin-bottom: 1.2rem;\r\n  display: block;\r\n}\r\n.transactions-table thead, .transactions-table tbody {\r\n  display: table;\r\n  width: 100%;\r\n  table-layout: fixed;\r\n}\r\n.transactions-table th, .transactions-table td {\r\n  padding: 0.5rem 0.7rem;\r\n  text-align: left;\r\n  white-space: normal;\r\n  word-break: break-word;\r\n  overflow-wrap: break-word;\r\n}\r\n.transactions-table th {\r\n  background: #f1f5f9;\r\n  color: #334155;\r\n  font-weight: 600;\r\n  font-size: 1rem;\r\n  border-bottom: 1px solid #e2e8f0;\r\n  cursor: pointer;\r\n}\r\n.transactions-table td {\r\n  color: #22223b;\r\n  font-size: 0.98rem;\r\n  border-bottom: 1px solid #f1f5f9;\r\n}\r\n.transactions-table tr:last-child td {\r\n  border-bottom: none;\r\n}\r\n.transactions-table tr:nth-child(even) td {\r\n  background: #fff;\r\n}\r\n\r\n.pagination {\r\n  display: flex;\r\n  gap: 1.2rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n.pagination button {\r\n  background: #e5edfa;\r\n  color: #22223b;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  font-size: 1.1rem;\r\n  padding: 0.7rem 1.5rem;\r\n  transition: background 0.2s;\r\n}\r\n.pagination button:disabled {\r\n  background: #f1f5f9;\r\n  color: #b0b7c3;\r\n  cursor: not-allowed;\r\n}\r\n.pagination button:hover:not(:disabled) {\r\n  background: #c7d7f7;\r\n}\r\n\r\n.error {\r\n  color: #e11d48;\r\n  background: #fef2f2;\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n  margin-top: 2rem;\r\n  font-size: 1.05rem;\r\n  border: 1px solid #fecaca;\r\n}\r\n\r\n@media (max-width: 900px) {\r\n  .transactions-container {\r\n    max-width: 98vw;\r\n    padding: 1.2rem 0.5rem 1rem 0.5rem;\r\n  }\r\n  .top-bar h2 {\r\n    font-size: 1.3rem;\r\n  }\r\n}\r\n@media (max-width: 700px) {\r\n  .transactions-container {\r\n    max-width: 98vw;\r\n    min-width: 0;\r\n    padding: 1rem 0.3rem 0.7rem 0.3rem;\r\n  }\r\n  .transactions-table {\r\n    font-size: 0.95rem;\r\n    display: block;\r\n    overflow-x: auto;\r\n  }\r\n  .transactions-table th, .transactions-table td {\r\n    padding: 0.4rem 0.3rem;\r\n    font-size: 0.95rem;\r\n    white-space: normal;\r\n    word-break: break-word;\r\n    overflow-wrap: break-word;\r\n  }\r\n}\r\n@media (max-width: 600px) {\r\n  .transactions-container {\r\n    padding: 0.7rem 0.2rem 0.7rem 0.2rem;\r\n    min-width: 0;\r\n  }\r\n  .top-bar {\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    gap: 0.7rem;\r\n  }\r\n  .top-bar h2 {\r\n    font-size: 1.1rem;\r\n    text-align: left;\r\n  }\r\n  .export-btn, .back-btn {\r\n    width: 100%;\r\n    font-size: 0.95rem;\r\n    padding: 0.7rem 0.7rem;\r\n  }\r\n}\r\n@media (max-width: 500px) {\r\n  .transactions-container {\r\n    padding: 0.7rem 0.1rem 0.7rem 0.1rem;\r\n  }\r\n  .transactions-table th, .transactions-table td {\r\n    font-size: 0.92rem;\r\n    padding: 0.3rem 0.2rem;\r\n  }\r\n}\r\n","import { Component, Event, EventEmitter, h, Prop } from '@stencil/core';\r\nimport { API_BASE_URL } from '../../config';\r\n\r\n@Component({\r\n  tag: 'wallet-transactions',\r\n  styleUrl: 'wallet-transactions.css',\r\n  shadow: true,\r\n})\r\nexport class WalletTransactions {\r\n  @Prop() walletId: string;\r\n  @Event() back: EventEmitter<void>;\r\n  @Event() notificationChange: EventEmitter<{ message: string; type: 'success' | 'error' }>;\r\n\r\n  async handleExportCSV() {\r\n    try {\r\n      const transactionRes = await fetch(`${API_BASE_URL}/transactions?walletId=${this.walletId}&skip=0&limit=10000`);\r\n      if (!transactionRes.ok) {\r\n        throw new Error(`Failed to fetch transactions: ${transactionRes.statusText}`);\r\n      }\r\n      const data = await transactionRes.json();\r\n\r\n      let username = 'wallet';\r\n      try {\r\n        const walletRes = await fetch(`${API_BASE_URL}/wallet/${this.walletId}`);\r\n        if (!walletRes.ok) {\r\n          throw new Error(`Failed to fetch wallet: ${walletRes.statusText}`);\r\n        }\r\n        const wallet = await walletRes.json();\r\n        username = wallet.name || 'wallet';\r\n      } catch (walletErr) {\r\n        console.warn('Failed to fetch wallet name, using default:', walletErr);\r\n      }\r\n\r\n      const headers = ['Date', 'Amount', 'Description', 'Type', 'Balance'];\r\n      const rows = data.map((transaction: any) => [\r\n        transaction.date\r\n          ? new Date(transaction.date).toLocaleString()\r\n          : (transaction.transaction_time_stamp\r\n              ? new Date(transaction.transaction_time_stamp).toLocaleString()\r\n              : ''),\r\n        transaction.amount?.toFixed(4) ?? '',\r\n        transaction.description || '',\r\n        transaction.type ? (transaction.type.charAt(0).toUpperCase() + transaction.type.slice(1).toLowerCase()) : '',\r\n        transaction.balance?.toFixed(4) ?? ''\r\n      ]);\r\n\r\n      let csvContent = headers.join(',') + '\\n';\r\n      csvContent += rows.map(r => r.map(field => \r\n        '\"' + (field != null ? String(field).replace(/\"/g, '\"\"').replace(/\\n/g, ' ') : '').trim() + '\"'\r\n      ).join(',')).join('\\n');\r\n\r\n      const now = new Date();\r\n      const dateStr = `${now.getFullYear()}-${String(now.getMonth()+1).padStart(2,'0')}-${String(now.getDate()).padStart(2,'0')}`;\r\n      const safeUsername = username.replace(/[^a-zA-Z0-9_-]/g, '');\r\n      const filename = `${safeUsername}_transactions_${dateStr}.csv`;\r\n\r\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = filename;\r\n      a.click();\r\n      URL.revokeObjectURL(url);\r\n\r\n      this.notificationChange.emit({ message: 'Transactions exported successfully', type: 'success' });\r\n    } catch (err) {\r\n      console.error('Export failed:', err);\r\n      this.notificationChange.emit({ \r\n        message: err instanceof Error ? err.message : 'Failed to export transactions', \r\n        type: 'error' \r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"transactions-container\">\r\n        <div class=\"top-bar\">\r\n          <button class=\"back-btn\" onClick={() => this.back.emit()}>&larr; Back</button>\r\n          <h2>Transactions</h2>\r\n          <button class=\"export-btn\" onClick={() => this.handleExportCSV()}>Export CSV</button>\r\n        </div>\r\n        <wallet-transactions-table wallet-id={this.walletId} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  background: #f7f9fb;\r\n  font-family: 'Inter', 'Segoe UI', Arial, sans-serif;\r\n}\r\n\r\n.transactions-container {\r\n  background: #fff;\r\n  border-radius: 18px;\r\n  box-shadow: 0 2px 16px rgba(0,0,0,0.07);\r\n  padding: 2rem 2rem 1.5rem 2rem;\r\n  margin: 1.5rem auto 0 auto;\r\n  width: 100%;\r\n  max-width: 900px;\r\n  min-width: 320px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n}\r\n\r\n.top-bar {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  margin-bottom: 1.5rem;\r\n  background: none;\r\n  border-radius: 0;\r\n  box-shadow: none;\r\n  padding: 0;\r\n}\r\n.top-bar .back-btn {\r\n  background: #f7f9fb;\r\n  color: #2563eb;\r\n  border: 1.5px solid #2563eb;\r\n  font-weight: 600;\r\n  border-radius: 8px;\r\n  padding: 0.45rem 1.1rem;\r\n  font-size: 1rem;\r\n  transition: background 0.2s, color 0.2s;\r\n  box-shadow: 0 1px 4px rgba(0,0,0,0.03);\r\n  margin-right: 1.5rem;\r\n}\r\n.top-bar .back-btn:hover {\r\n  background: #2563eb;\r\n  color: #fff;\r\n}\r\n.top-bar h2 {\r\n  margin: 0;\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  color: #22223b;\r\n}\r\n\r\n.export-btn {\r\n  background: #2563eb;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  font-size: 1.1rem;\r\n  padding: 0.7rem 2rem;\r\n  margin-bottom: 1.2rem;\r\n  margin-top: 0.5rem;\r\n  transition: background 0.2s;\r\n}\r\n.export-btn:hover {\r\n  background: #1d4ed8;\r\n}\r\n\r\n.table-container {\r\n  width: 100%;\r\n  overflow-x: auto;\r\n  margin-top: 1.5rem;\r\n  background: none;\r\n}\r\n.transactions-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  background: #f7f9fb;\r\n  font-size: 1rem;\r\n  min-width: 600px;\r\n}\r\n.transactions-table thead, .transactions-table tbody {\r\n  display: table;\r\n  width: 100%;\r\n  table-layout: fixed;\r\n}\r\n.transactions-table th, .transactions-table td {\r\n  padding: 0.9rem 1.1rem;\r\n  text-align: left;\r\n}\r\n.transactions-table th {\r\n  background: #f1f5f9;\r\n  font-weight: 600;\r\n  color: #22223b;\r\n  font-size: 1.05rem;\r\n}\r\n.transactions-table tr {\r\n  background: #fff;\r\n  border-bottom: 1px solid #e5e7eb;\r\n}\r\n.transactions-table tr:last-child {\r\n  border-bottom: none;\r\n}\r\n.transactions-table tr:nth-child(even) td {\r\n  background: #fff;\r\n}\r\n\r\n.pagination {\r\n  display: flex;\r\n  gap: 1.2rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n.pagination button {\r\n  background: #e5edfa;\r\n  color: #22223b;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  font-size: 1.1rem;\r\n  padding: 0.7rem 1.5rem;\r\n  transition: background 0.2s;\r\n}\r\n.pagination button:disabled {\r\n  background: #f1f5f9;\r\n  color: #b0b7c3;\r\n  cursor: not-allowed;\r\n}\r\n.pagination button:hover:not(:disabled) {\r\n  background: #c7d7f7;\r\n}\r\n\r\n.error {\r\n  color: #e11d48;\r\n  background: #fef2f2;\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n  margin-top: 2rem;\r\n  font-size: 1.05rem;\r\n  border: 1px solid #fecaca;\r\n}\r\n\r\n@media (max-width: 900px) {\r\n  .transactions-table {\r\n    font-size: 0.95rem;\r\n    min-width: 480px;\r\n  }\r\n  .transactions-table th, .transactions-table td {\r\n    padding: 0.7rem 0.7rem;\r\n  }\r\n}\r\n@media (max-width: 700px) {\r\n  .transactions-container {\r\n    max-width: 98vw;\r\n    min-width: 0;\r\n    padding: 1rem 0.3rem 0.7rem 0.3rem;\r\n  }\r\n  .transactions-table {\r\n    font-size: 0.95rem;\r\n    display: block;\r\n    overflow-x: auto;\r\n  }\r\n  .transactions-table th, .transactions-table td {\r\n    padding: 0.4rem 0.3rem;\r\n    font-size: 0.95rem;\r\n    white-space: normal;\r\n    word-break: break-word;\r\n    overflow-wrap: break-word;\r\n  }\r\n}\r\n@media (max-width: 600px) {\r\n  .table-container {\r\n    margin-top: 0.7rem;\r\n  }\r\n  .transactions-table {\r\n    font-size: 0.9rem;\r\n    min-width: 350px;\r\n  }\r\n  .transactions-table th, .transactions-table td {\r\n    padding: 0.5rem 0.4rem;\r\n  }\r\n}\r\n@media (max-width: 500px) {\r\n  .transactions-container {\r\n    padding: 0.7rem 0.1rem 0.7rem 0.1rem;\r\n  }\r\n  .transactions-table th, .transactions-table td {\r\n    font-size: 0.92rem;\r\n    padding: 0.3rem 0.2rem;\r\n  }\r\n}\r\n","import { Component, h, Prop, State, Watch } from '@stencil/core';\r\nimport { API_BASE_URL } from '../../config';\r\n\r\n@Component({\r\n  tag: 'wallet-transactions-table',\r\n  styleUrl: 'wallet-transactions-table.css',\r\n  shadow: false\r\n})\r\nexport class WalletTransactionsTable {\r\n  @Prop() walletId: string;\r\n\r\n  @State() transactions: any[] = [];\r\n  @State() total: number = 0;\r\n  @State() skip: number = 0;\r\n  @State() limit: number = 5;\r\n  @State() loading: boolean = false;\r\n  @State() error: string = '';\r\n  @State() sortBy: string = 'transaction_time_stamp';\r\n  @State() sortDir: 'asc' | 'desc' = 'desc';\r\n\r\n  private cachedData: string = '';\r\n\r\n  componentWillLoad() {\r\n    this.fetchTransactions();\r\n  }\r\n\r\n  private shouldFetchData() {\r\n    const newData = JSON.stringify({\r\n      walletId: this.walletId,\r\n      skip: this.skip,\r\n      limit: this.limit,\r\n      sortBy: this.sortBy,\r\n      sortDir: this.sortDir\r\n    });\r\n    if (newData !== this.cachedData) {\r\n      this.cachedData = newData;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  async fetchTransactions() {\r\n    if (!this.shouldFetchData()) return;\r\n\r\n    try {\r\n      this.loading = true;\r\n\r\n      const res = await fetch(`${API_BASE_URL}/transactions?walletId=${this.walletId}&skip=${this.skip}&limit=${this.limit}&sortBy=${this.sortBy}&sortDir=${this.sortDir}`);\r\n      if (!res.ok) throw new Error('Failed to fetch transactions');\r\n      const data = await res.json();\r\n\r\n      const countRes = await fetch(`${API_BASE_URL}/transactions/count?walletId=${this.walletId}`);\r\n      if (!countRes.ok) throw new Error('Failed to fetch transaction count');\r\n      const countData = await countRes.json();\r\n\r\n      this.transactions = data;\r\n      this.total = countData.total;\r\n      this.error = '';\r\n    } catch (err) {\r\n      this.error = (err as Error).message;\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  @Watch('walletId')\r\n  walletIdChanged() {\r\n    this.fetchTransactions();\r\n  }\r\n\r\n  private handleSort = (field: string) => {\r\n    const newDir = this.sortBy === field ? (this.sortDir === 'asc' ? 'desc' : 'asc') : 'desc';\r\n    this.sortBy = field;\r\n    this.sortDir = newDir;\r\n    this.fetchTransactions();\r\n  };\r\n\r\n  private handlePaginate = (skip: number) => {\r\n    this.skip = skip;\r\n    this.fetchTransactions();\r\n  };\r\n\r\n  private arrow = (field: string) => {\r\n    if (this.sortBy !== field) return <span style={{ opacity: '0.3' }}>↑↓</span>;\r\n    return this.sortDir === 'asc' ? <b>↑</b> : <b>↓</b>;\r\n  };\r\n\r\n  render() {\r\n    const isFirstPage = this.skip === 0;\r\n    const isLastPage = this.skip + this.limit >= this.total;\r\n    return (\r\n      <div class=\"table-container\" style={{ position: 'relative' }}>\r\n        <table class=\"transactions-table\" style={{ position: 'relative' }}>\r\n          <thead>\r\n            <tr>\r\n              <th onClick={() => this.handleSort('transaction_time_stamp')} style={{ cursor: 'pointer' }}>\r\n                Date {this.arrow('transaction_time_stamp')}\r\n              </th>\r\n              <th onClick={() => this.handleSort('amount')} style={{ cursor: 'pointer' }}>\r\n                Amount {this.arrow('amount')}\r\n              </th>\r\n              <th>Description</th>\r\n              <th>Type</th>\r\n              <th>Balance</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.transactions.map(transaction => (\r\n              <tr>\r\n                <td>{transaction.date ? new Date(transaction.date).toLocaleString() : ''}</td>\r\n                <td>{typeof transaction.amount === 'number' ? transaction.amount.toFixed(4) : ''}</td>\r\n                <td>{transaction.description || ''}</td>\r\n                <td>{transaction.type ? (transaction.type.charAt(0).toUpperCase() + transaction.type.slice(1).toLowerCase()) : ''}</td>\r\n                <td>{typeof transaction.balance === 'number' ? transaction.balance.toFixed(4) : ''}</td>\r\n              </tr>\r\n            ))}\r\n            {this.transactions.length === 0 && !this.loading && (\r\n              <tr>\r\n                <td colSpan={5} style={{ textAlign: 'center', padding: '2rem' }}>\r\n                  No transactions found\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        <div class=\"pagination\">\r\n          <button disabled={isFirstPage || this.loading}\r\n            onClick={() => this.handlePaginate(Math.max(0, this.skip - this.limit))}>\r\n            Prev\r\n          </button>\r\n          <button disabled={isLastPage || this.loading}\r\n            onClick={() => this.handlePaginate(this.skip + this.limit)}>\r\n            Next\r\n          </button>\r\n        </div>\r\n        {this.error && <div class=\"error\">{this.error}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}